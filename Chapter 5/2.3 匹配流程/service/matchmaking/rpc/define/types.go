// Code generated by CodeGenerator. DO NOT EDIT!
//
// Source: matchmaking.proto
// Time: 2023-07-05 10:20:01

package define

import (
	"ProjectX/service/matchmaking/pb/matchmaking"

	"context"
	"google.golang.org/grpc"
)

type (
	StartRequest = matchmaking.StartRequest
	StartResponse = matchmaking.StartResponse
	CancelRequest = matchmaking.CancelRequest
	CancelResponse = matchmaking.CancelResponse
	ResultRequest = matchmaking.ResultRequest
	MatchResultDetails = matchmaking.MatchResultDetails
	ResultResponse = matchmaking.ResultResponse

	Matchmaking interface {
		Start(ctx context.Context, in *StartRequest) (*StartResponse, error)
		Cancel(ctx context.Context, in *CancelRequest) (*CancelResponse, error)
		Result(ctx context.Context, in *ResultRequest) (*ResultResponse, error)
	}

	Listener interface { // 当前服务的监听
		// Start 开启监听
		Start()
		// Stop 关闭监听
		Stop()
		// RegisterService 向 grpc 注册监听，protobuf 生成的 rpc 需要
		RegisterService(desc *grpc.ServiceDesc, impl interface{})
	}
)
