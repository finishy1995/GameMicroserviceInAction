// Code generated by CodeGenerator. DO NOT EDIT!
//
// Source: matchmaking.proto
// Time: 2023-07-05 10:20:01

package server

import (
	"context"

    "ProjectX/service/matchmaking/internal/logic"
	"ProjectX/service/matchmaking/internal/svc"
	"ProjectX/service/matchmaking/pb/matchmaking"
)

type MatchmakingServer struct {
	svcCtx *svc.ServiceContext
	matchmaking.UnimplementedMatchmakingServer
}

func NewMatchmakingServer(svcCtx *svc.ServiceContext) *MatchmakingServer {
	return &MatchmakingServer{
		svcCtx: svcCtx,
	}
}

func (s *MatchmakingServer) Start(ctx context.Context, in *matchmaking.StartRequest) (*matchmaking.StartResponse, error) {
	l := logic.NewStartLogic(ctx, s.svcCtx)
	return l.Start(in)
}

func (s *MatchmakingServer) Cancel(ctx context.Context, in *matchmaking.CancelRequest) (*matchmaking.CancelResponse, error) {
	l := logic.NewCancelLogic(ctx, s.svcCtx)
	return l.Cancel(in)
}

func (s *MatchmakingServer) Result(ctx context.Context, in *matchmaking.ResultRequest) (*matchmaking.ResultResponse, error) {
	l := logic.NewResultLogic(ctx, s.svcCtx)
	return l.Result(in)
}
