// Code generated by CodeGenerator. Not generate if exist
//
// Source: game.proto
// Time: 2023-07-25 08:25:21

package logic

import (
	game2 "ProjectX/access/game/internal/game"
	"ProjectX/access/game/internal/svc"
	"ProjectX/access/game/pb/game"
	"ProjectX/base"
	"ProjectX/library/log"
	"context"
)

type SetGameEnvironmentLogic struct {
	ctx    context.Context
	svcCtx *svc.ServiceContext
	log.Logger
}

func NewSetGameEnvironmentLogic(ctx context.Context, svcCtx *svc.ServiceContext) *SetGameEnvironmentLogic {
	return &SetGameEnvironmentLogic{
		ctx:    ctx,
		svcCtx: svcCtx,
		Logger: log.WithContext(ctx),
	}
}

func (l *SetGameEnvironmentLogic) SetGameEnvironment(in *game.SetGameEnvironmentRequest) (resp *game.SetGameEnvironmentResponse, errResp error) {
	resp = &game.SetGameEnvironmentResponse{}
	if in.Secret == "" || in.UserId == nil {
		resp.Code = base.ErrorInvalidSecret
		return
	}

	g := game2.GetGame()
	if g == nil {
		resp.Code = base.ErrorCodeServiceBusy
		return
	}
	g.Init(in.Secret, in.UserId)

	resp.Code = base.ErrorCodeOK
	resp.Port = int32(g.GetPort())

	return
}
